{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-12-10T14:42:07.398Z",
    "end": "2021-12-10T14:43:50.284Z",
    "duration": 102886,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2e6ed686-1b9c-4b96-8d0e-fb1b345ca19c",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8957805f-1ee0-405d-b681-d7e2f2041788",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "601778e8-d39f-4a7d-bec2-2ec4896df6b2",
              "parentUUID": "8957805f-1ee0-405d-b681-d7e2f2041788",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "601778e8-d39f-4a7d-bec2-2ec4896df6b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1326,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4f27805b-42fb-4756-82cc-edb5149fa84a",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "605a4248-263c-4d4d-9669-9bbd53dbc15e",
              "parentUUID": "4f27805b-42fb-4756-82cc-edb5149fa84a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 613,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "900c10f7-3d56-4609-81cc-b8317edff89e",
              "parentUUID": "4f27805b-42fb-4756-82cc-edb5149fa84a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 698,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "0bd2a6a0-e2e7-45db-b565-ce34d3070402",
              "parentUUID": "4f27805b-42fb-4756-82cc-edb5149fa84a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 472,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "8dffd0a0-fc76-4f53-bd06-c0d631f40c11",
              "parentUUID": "4f27805b-42fb-4756-82cc-edb5149fa84a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "d4fd6b6f-e55f-465b-9840-1847da495f21",
              "parentUUID": "4f27805b-42fb-4756-82cc-edb5149fa84a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 394,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "9b907a16-43ac-4c7b-b767-b957a5d6036c",
              "parentUUID": "4f27805b-42fb-4756-82cc-edb5149fa84a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "eca4cbab-7a9e-45cd-8c32-9c8c51bfd270",
              "parentUUID": "4f27805b-42fb-4756-82cc-edb5149fa84a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "605a4248-263c-4d4d-9669-9bbd53dbc15e",
            "900c10f7-3d56-4609-81cc-b8317edff89e",
            "0bd2a6a0-e2e7-45db-b565-ce34d3070402",
            "8dffd0a0-fc76-4f53-bd06-c0d631f40c11",
            "d4fd6b6f-e55f-465b-9840-1847da495f21",
            "9b907a16-43ac-4c7b-b767-b957a5d6036c",
            "eca4cbab-7a9e-45cd-8c32-9c8c51bfd270"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3026,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c28c59c6-b9c2-4955-b297-f6b8b460cd7a",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b8218221-55e4-4081-8b27-f648bb13095f",
              "parentUUID": "c28c59c6-b9c2-4955-b297-f6b8b460cd7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 675,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "e1bc537f-aa05-4eb3-a2c3-b1525218f659",
              "parentUUID": "c28c59c6-b9c2-4955-b297-f6b8b460cd7a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8218221-55e4-4081-8b27-f648bb13095f",
            "e1bc537f-aa05-4eb3-a2c3-b1525218f659"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1017,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99cbfd06-ae27-46ae-97f1-8a606ce476f8",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "62608c26-10c7-45ba-8b7e-3fb3562c97e1",
              "parentUUID": "99cbfd06-ae27-46ae-97f1-8a606ce476f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "4ded93d5-46c8-41f6-a3e6-51903cf1dc37",
              "parentUUID": "99cbfd06-ae27-46ae-97f1-8a606ce476f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f8162d46-3b01-402f-9f1c-69bc6c9a629c",
              "parentUUID": "99cbfd06-ae27-46ae-97f1-8a606ce476f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 532,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "5ddcdc7f-7006-45e5-a0d0-c571a8b79080",
              "parentUUID": "99cbfd06-ae27-46ae-97f1-8a606ce476f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62608c26-10c7-45ba-8b7e-3fb3562c97e1",
            "4ded93d5-46c8-41f6-a3e6-51903cf1dc37",
            "f8162d46-3b01-402f-9f1c-69bc6c9a629c",
            "5ddcdc7f-7006-45e5-a0d0-c571a8b79080"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1749,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c4e9194a-f711-4e02-9cfb-5123922d800f",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "fd288982-826a-4f0a-bd6a-cc621a98f8c8",
              "parentUUID": "c4e9194a-f711-4e02-9cfb-5123922d800f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 966,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "5ec7be85-3642-4b5f-aebf-75ad6bdd56de",
              "parentUUID": "c4e9194a-f711-4e02-9cfb-5123922d800f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd288982-826a-4f0a-bd6a-cc621a98f8c8",
            "5ec7be85-3642-4b5f-aebf-75ad6bdd56de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1889,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b14c42b-63c8-49d2-9b50-dea5543bc547",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 335,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "da448edc-28da-4ff7-bd5a-bc22fb5f6c23",
              "parentUUID": "6b14c42b-63c8-49d2-9b50-dea5543bc547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "7b180fc7-ffb4-4a72-b91e-f652b34fe457",
              "parentUUID": "6b14c42b-63c8-49d2-9b50-dea5543bc547",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da448edc-28da-4ff7-bd5a-bc22fb5f6c23",
            "7b180fc7-ffb4-4a72-b91e-f652b34fe457"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 579,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "979fb541-f667-4708-bae6-1be1a4380035",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "753a661a-c853-4f29-8eb7-d1ca415dfeeb",
              "parentUUID": "979fb541-f667-4708-bae6-1be1a4380035",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "b728e7cd-0525-4cbb-bd10-d1f49799838b",
              "parentUUID": "979fb541-f667-4708-bae6-1be1a4380035",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "753a661a-c853-4f29-8eb7-d1ca415dfeeb",
            "b728e7cd-0525-4cbb-bd10-d1f49799838b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9734,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b66e7b98-0249-4dc5-9d54-fcd0ef7108ba",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2720,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "cdda6374-327c-4adc-b94d-3a530f4c4b66",
              "parentUUID": "b66e7b98-0249-4dc5-9d54-fcd0ef7108ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d796d4dd-7606-4817-a2b6-5b874250e7b4",
              "parentUUID": "b66e7b98-0249-4dc5-9d54-fcd0ef7108ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "ef25c794-2028-4a98-aad0-9d6ab386a3c5",
              "parentUUID": "b66e7b98-0249-4dc5-9d54-fcd0ef7108ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cdda6374-327c-4adc-b94d-3a530f4c4b66",
            "d796d4dd-7606-4817-a2b6-5b874250e7b4",
            "ef25c794-2028-4a98-aad0-9d6ab386a3c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15020,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c68bca4c-347b-4d0f-9a94-28955c4ba826",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "9e76d172-e940-4c92-abe9-1cf5661b6c9c",
              "parentUUID": "c68bca4c-347b-4d0f-9a94-28955c4ba826",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "cee8092d-794c-4dcc-9ec2-45aed51aae9b",
              "parentUUID": "c68bca4c-347b-4d0f-9a94-28955c4ba826",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "4c8fa940-f1f3-4a94-8452-f33c2ec8e121",
              "parentUUID": "c68bca4c-347b-4d0f-9a94-28955c4ba826",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "76dd02b9-3705-409f-81bc-9a95cf8e987d",
              "parentUUID": "c68bca4c-347b-4d0f-9a94-28955c4ba826",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e76d172-e940-4c92-abe9-1cf5661b6c9c",
            "cee8092d-794c-4dcc-9ec2-45aed51aae9b",
            "4c8fa940-f1f3-4a94-8452-f33c2ec8e121",
            "76dd02b9-3705-409f-81bc-9a95cf8e987d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3553,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d4b3b761-0063-4c87-bc6a-db3e153dd60e",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4830,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b9775f0e-6ed7-44e0-acba-a94b61d3a516",
              "parentUUID": "d4b3b761-0063-4c87-bc6a-db3e153dd60e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5051,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d5aeefe3-4e6f-41bc-85da-30cb129c7314",
              "parentUUID": "d4b3b761-0063-4c87-bc6a-db3e153dd60e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5378,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c610b702-2213-4d31-b767-faec44d83379",
              "parentUUID": "d4b3b761-0063-4c87-bc6a-db3e153dd60e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5083,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1b3ec439-8ef4-45bb-a3a5-a7b06e9d3a4e",
              "parentUUID": "d4b3b761-0063-4c87-bc6a-db3e153dd60e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5368,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "46ef9194-9197-488c-8288-548b743dbe11",
              "parentUUID": "d4b3b761-0063-4c87-bc6a-db3e153dd60e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4700,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "36ee37ce-147a-4be5-a163-a91fe0294779",
              "parentUUID": "d4b3b761-0063-4c87-bc6a-db3e153dd60e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4947,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b3eae1a8-637f-450e-8e7d-21c088f11dd0",
              "parentUUID": "d4b3b761-0063-4c87-bc6a-db3e153dd60e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4899,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "00a9eada-3058-452b-8d99-e97fd74c9b96",
              "parentUUID": "d4b3b761-0063-4c87-bc6a-db3e153dd60e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5166,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4d990725-3232-4652-9ff2-c50380127fe3",
              "parentUUID": "d4b3b761-0063-4c87-bc6a-db3e153dd60e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b9775f0e-6ed7-44e0-acba-a94b61d3a516",
            "d5aeefe3-4e6f-41bc-85da-30cb129c7314",
            "c610b702-2213-4d31-b767-faec44d83379",
            "1b3ec439-8ef4-45bb-a3a5-a7b06e9d3a4e",
            "46ef9194-9197-488c-8288-548b743dbe11",
            "36ee37ce-147a-4be5-a163-a91fe0294779",
            "b3eae1a8-637f-450e-8e7d-21c088f11dd0",
            "00a9eada-3058-452b-8d99-e97fd74c9b96",
            "4d990725-3232-4652-9ff2-c50380127fe3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 45422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7e0b182-e8b3-47b4-a265-eb8577b8ddaf",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5170,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "758b4b32-7135-4804-ab43-2939787e17b7",
              "parentUUID": "e7e0b182-e8b3-47b4-a265-eb8577b8ddaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5201,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3b026d63-2679-4ab7-9176-27da71398860",
              "parentUUID": "e7e0b182-e8b3-47b4-a265-eb8577b8ddaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5159,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:50575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:50575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:50575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:50575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:50575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:50575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1303fdd2-4733-4849-89ce-74a5b116934d",
              "parentUUID": "e7e0b182-e8b3-47b4-a265-eb8577b8ddaf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "758b4b32-7135-4804-ab43-2939787e17b7",
            "3b026d63-2679-4ab7-9176-27da71398860",
            "1303fdd2-4733-4849-89ce-74a5b116934d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15530,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ab643bc6-5ca5-4dbc-bd16-8139d5abb66e",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1091,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:50575/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:50575/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:50575/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:50575/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:50575/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:50575/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:50575/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "cfee98ee-f16f-46aa-aa4e-94256aaf5dd3",
              "parentUUID": "ab643bc6-5ca5-4dbc-bd16-8139d5abb66e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1074,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:50575/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:50575/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:50575/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:50575/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:50575/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:50575/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:50575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:50575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:50575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:50575/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:50575/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:50575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f9efb1de-c9d8-4dc5-9c4e-7a3757a8d32f",
              "parentUUID": "ab643bc6-5ca5-4dbc-bd16-8139d5abb66e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cfee98ee-f16f-46aa-aa4e-94256aaf5dd3",
            "f9efb1de-c9d8-4dc5-9c4e-7a3757a8d32f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2165,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}